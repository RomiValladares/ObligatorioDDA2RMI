/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iu;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logica.JuegoCasino;
import logica.Jugador;

/**
 *
 * @author Romi
 */
public class FrameJuegos extends javax.swing.JFrame implements ActionListener, Observer {

    private ControladorFrameJuegos controlador;

    /**
     * Creates new form FrameJuegos
     */
    public FrameJuegos(Jugador jugador) {
        initComponents();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        try {
            controlador = new ControladorFrameJuegos(jugador);
            controlador.addObserver(this);
            panelDatosJugador1.setControlador(controlador);
        } catch (RemoteException ex) {
            Logger.getLogger(FrameJuegos.class.getName()).log(Level.SEVERE, null, ex);
        }

        crearListaJuegos();
    }

    private void crearListaJuegos() {
        ArrayList<JuegoCasino> juegos = controlador.getJuegos();
        if (juegos != null) {
            panelBotonesJuegos.removeAll();
            GridLayout gridBotones = new GridLayout(juegos.size(), 1);
            panelBotonesJuegos.setLayout(gridBotones);
            try {
                for (JuegoCasino juego : juegos) {
                    JButton btnJuego = new JButton(juego.getEtiqueta());
                    btnJuego.addActionListener(this);
                    btnJuego.setActionCommand("" + juego.getCodigo());
                    btnJuego.setMaximumSize(new Dimension(50, 50));
                    File f = new File("src/imgs/juego" + juego.getCodigo() + ".png");
                    if (f.exists()) {

                        btnJuego.setIcon(new ImageIcon("src/imgs/juego" + juego.getCodigo() + ".png"));

                    }
                    panelBotonesJuegos.add(btnJuego);
                }
                validate();
                repaint();
            } catch (RemoteException ex) {
                Logger.getLogger(FrameJuegos.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDatosJugador1 = new iu.poker.PanelDatosJugador();
        panelBotonesJuegos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBotonesJuegos.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelDatosJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelBotonesJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(panelDatosJugador1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(panelBotonesJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelBotonesJuegos;
    private iu.poker.PanelDatosJugador panelDatosJugador1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        try {
            JButton btnClickeado = (JButton) e.getSource();
            String codigoJuego = btnClickeado.getActionCommand();

            //TODO esto es horrible
            ArrayList<JuegoCasino> juegos = controlador.getJuegos();
            JuegoCasino juego = null;
            for (JuegoCasino j : juegos) {
                if (("" + j.getCodigo()).equals(codigoJuego)) {
                    juego = j;
                }
            }

            controlador.ingresar(juego);
            setVisible(false);
            dispose();
//            if (juego != null && juego.puedeJugar(jugador)) {
//                PartidaJuegoCasino p = juego.jugar(jugador);
//                JFrame frameJuego = FabricadorFrameJuegos.getVentanaJuego(juego, jugador, p);
//                frameJuego.setVisible(true);
//                setVisible(false);
//                dispose();
//            }
        } catch (Exception ex) {
            Logger.getLogger(FrameLogin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    @Override
    public void update(Observable o, Object arg) {
        crearListaJuegos();
    }
}
