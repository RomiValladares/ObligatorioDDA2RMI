/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iu.consultas;

import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import logica.ssjuegos.DatosPartidaJuegoCasino;
import logica.ssjuegos.JuegoCasino;

/**
 *
 * @author Romi
 */
public class TablaPartidas extends javax.swing.JPanel {

    /**
     * para acceder a los participantes cuando se haga click en la tabla de
     * arriba
     */
    private ArrayList<DatosPartidaJuegoCasino> partidas;
    private ArrayList<JuegoCasino> juegos;

    /**
     * Creates new form TablaPartidas
     */
    public TablaPartidas() {
        initComponents();
        panelAbajo.setVisible(false);
        tablaPartidas.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (tablaPartidas.getSelectedRow() != -1) {
                    Object partidaSeleccionada = tablaPartidas.getValueAt(tablaPartidas.getSelectedRow(), 0);
                    lblParticipantesPartida.setText("Participantes partida " + partidaSeleccionada);

                    mostrarListaParticipantes(partidas.get(tablaPartidas.getSelectedRow()));
                } else {
                    panelAbajo.setVisible(false);
                }
            }
        });
    }

    private void mostrarListaParticipantes(DatosPartidaJuegoCasino seleccionada) {
        panelAbajo.setVisible(true);
        listaParticipantes.setListData(new ArrayList<>(seleccionada.getJugadores().keySet()).toArray());
        listaParticipantes.setCellRenderer(new RendererCelda());
        try {
            if (seleccionada.getGanador() != null) {
                lblGanador.setText(seleccionada.getGanador().getNombre());
            } else {
                lblGanador.setText("-");
            }
        } catch (Exception ex) {
            Logger.getLogger(TablaPartidas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPartidasJuego = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPartidas = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        comboJuegos = new javax.swing.JComboBox();
        panelAbajo = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaParticipantes = new javax.swing.JList();
        lblGanador = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblParticipantesPartida = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setMaximumSize(new java.awt.Dimension(508, 375));
        setMinimumSize(new java.awt.Dimension(508, 375));

        lblPartidasJuego.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPartidasJuego.setText("Partidas juego {juego}");

        tablaPartidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Numero", "Comienzo", "Final", "Duracion (min)", "Total Apostado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPartidas);

        jLabel2.setText("Seleccione un juego:");

        comboJuegos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboJuegos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboJuegosActionPerformed(evt);
            }
        });

        listaParticipantes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listaParticipantes);

        lblGanador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblGanador.setText("jLabel3");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Ganador:");

        lblParticipantesPartida.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblParticipantesPartida.setText("Participantes partida {n}");

        javax.swing.GroupLayout panelAbajoLayout = new javax.swing.GroupLayout(panelAbajo);
        panelAbajo.setLayout(panelAbajoLayout);
        panelAbajoLayout.setHorizontalGroup(
            panelAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAbajoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblParticipantesPartida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAbajoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGanador, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panelAbajoLayout.setVerticalGroup(
            panelAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAbajoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAbajoLayout.createSequentialGroup()
                        .addComponent(lblParticipantesPartida)
                        .addGap(18, 18, 18)
                        .addGroup(panelAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(lblGanador)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelAbajo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(lblPartidasJuego, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboJuegos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(lblPartidasJuego)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboJuegosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboJuegosActionPerformed
        actualizarLabelPartida();
    }//GEN-LAST:event_comboJuegosActionPerformed

    private void actualizarLabelPartida() {
        panelAbajo.setVisible(false);
        try {
            lblPartidasJuego.setText("Partidas Juego " + juegos.get(comboJuegos.getSelectedIndex()).getNombre());
        } catch (RemoteException ex) {
            Logger.getLogger(TablaPartidas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboJuegos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblGanador;
    private javax.swing.JLabel lblParticipantesPartida;
    private javax.swing.JLabel lblPartidasJuego;
    private javax.swing.JList listaParticipantes;
    private javax.swing.JPanel panelAbajo;
    private javax.swing.JTable tablaPartidas;
    // End of variables declaration//GEN-END:variables

    JuegoCasino getJuegoSeleccionado() {
        return juegos.get(comboJuegos.getSelectedIndex());
    }

    void actualizarJuegos(ArrayList<JuegoCasino> juegos) {
        this.juegos = juegos;

        comboJuegos.setModel(new DefaultComboBoxModel(juegos.toArray()));
        comboJuegos.setRenderer(new RendererCelda());

        actualizarLabelPartida();
    }

    private final String[] columnasTablaPartidas = {"Numero", "Comienzo", "Final", "Duracion (mins)", "Total Apostado"};

    void actualizarPartidas(ArrayList<DatosPartidaJuegoCasino> partidas) {
        this.partidas = partidas;

        Object[][] objs = new Object[partidas.size()][columnasTablaPartidas.length];
        int fila = 0;
        for (DatosPartidaJuegoCasino partidaJuegoCasino : partidas) {
            String[] datos = new String[]{"" + partidaJuegoCasino.getNumeroPartida(),
                "" + partidaJuegoCasino.getTiempoInicial(),
                "" + partidaJuegoCasino.getTiempoFinal(),
                "" + partidaJuegoCasino.getDuracion(),
                "" + partidaJuegoCasino.getTotalApostado()};
            objs[fila++] = armarFila(columnasTablaPartidas.length, datos);
//            objs[fila][col++] = partidaJuegoCasino.getNumeroPartida();
//            objs[fila][col++] = partidaJuegoCasino.getComienzo();
//            objs[fila][col++] = partidaJuegoCasino.getFinal();
//            objs[fila][col++] = partidaJuegoCasino.getDuracion();
//            objs[fila][col++] = partidaJuegoCasino.getTotalApostado();
        }
        tablaPartidas.setModel(new DefaultTableModel(objs, columnasTablaPartidas));
    }

    private Object[] armarFila(int cols, String[] datos) {
        Object[] fila = new Object[cols];
//        for (int i = 0; i < cols; i++) {
//            fila[i] = datos[i];
//        }
        System.arraycopy(datos, 0, fila, 0, cols);
        return fila;
    }
}
